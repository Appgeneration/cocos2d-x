diff --git a/build/cocos2d_libs.xcodeproj/project.pbxproj b/build/cocos2d_libs.xcodeproj/project.pbxproj
index 08b4c96..29081f6 100644
--- a/build/cocos2d_libs.xcodeproj/project.pbxproj
+++ b/build/cocos2d_libs.xcodeproj/project.pbxproj
@@ -6187,7 +6187,7 @@
 		1551A336158F2AB200E66CFE /* Project object */ = {
 			isa = PBXProject;
 			attributes = {
-				LastUpgradeCheck = 0500;
+				LastUpgradeCheck = 0600;
 				ORGANIZATIONNAME = "";
 			};
 			buildConfigurationList = 1551A339158F2AB200E66CFE /* Build configuration list for PBXProject "cocos2d_libs" */;
@@ -7197,7 +7197,6 @@
 			isa = XCBuildConfiguration;
 			buildSettings = {
 				ALWAYS_SEARCH_USER_PATHS = YES;
-				ARCHS = "$(ARCHS_STANDARD_64_BIT)";
 				CLANG_CXX_LANGUAGE_STANDARD = "c++0x";
 				CLANG_CXX_LIBRARY = "libc++";
 				CLANG_WARN_BOOL_CONVERSION = YES;
@@ -7235,7 +7234,6 @@
 			isa = XCBuildConfiguration;
 			buildSettings = {
 				ALWAYS_SEARCH_USER_PATHS = YES;
-				ARCHS = "$(ARCHS_STANDARD_64_BIT)";
 				CLANG_CXX_LANGUAGE_STANDARD = "c++0x";
 				CLANG_CXX_LIBRARY = "libc++";
 				CLANG_WARN_BOOL_CONVERSION = YES;
@@ -7455,7 +7453,6 @@
 			isa = XCBuildConfiguration;
 			buildSettings = {
 				ALWAYS_SEARCH_USER_PATHS = YES;
-				ARCHS = "$(ARCHS_STANDARD)";
 				GCC_PRECOMPILE_PREFIX_HEADER = YES;
 				GCC_PREFIX_HEADER = "../cocos/cocos2d-prefix.pch";
 				GCC_PREPROCESSOR_DEFINITIONS = (
@@ -7485,7 +7482,6 @@
 			isa = XCBuildConfiguration;
 			buildSettings = {
 				ALWAYS_SEARCH_USER_PATHS = YES;
-				ARCHS = "$(ARCHS_STANDARD)";
 				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
 				GCC_PRECOMPILE_PREFIX_HEADER = YES;
 				GCC_PREFIX_HEADER = "../cocos/cocos2d-prefix.pch";
@@ -7515,7 +7511,6 @@
 		A07A4E0D178386390073F6A7 /* Debug */ = {
 			isa = XCBuildConfiguration;
 			buildSettings = {
-				ARCHS = "$(ARCHS_STANDARD_INCLUDING_64_BIT)";
 				IPHONEOS_DEPLOYMENT_TARGET = 5.1;
 				SDKROOT = iphoneos;
 				TARGETED_DEVICE_FAMILY = "1,2";
@@ -7525,7 +7520,6 @@
 		A07A4E0E178386390073F6A7 /* Release */ = {
 			isa = XCBuildConfiguration;
 			buildSettings = {
-				ARCHS = "$(ARCHS_STANDARD_INCLUDING_64_BIT)";
 				IPHONEOS_DEPLOYMENT_TARGET = 5.1;
 				SDKROOT = iphoneos;
 				TARGETED_DEVICE_FAMILY = "1,2";
@@ -7536,7 +7530,6 @@
 			isa = XCBuildConfiguration;
 			buildSettings = {
 				ALWAYS_SEARCH_USER_PATHS = YES;
-				ARCHS = "$(ARCHS_STANDARD)";
 				GCC_PREPROCESSOR_DEFINITIONS = (
 					"$(inherited)",
 					CC_TARGET_OS_IPHONE,
@@ -7555,7 +7548,6 @@
 			isa = XCBuildConfiguration;
 			buildSettings = {
 				ALWAYS_SEARCH_USER_PATHS = YES;
-				ARCHS = "$(ARCHS_STANDARD)";
 				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
 				GCC_PREPROCESSOR_DEFINITIONS = (
 					"$(inherited)",
@@ -7574,7 +7566,6 @@
 		A07A4F39178387670073F6A7 /* Debug */ = {
 			isa = XCBuildConfiguration;
 			buildSettings = {
-				ARCHS = "$(ARCHS_STANDARD)";
 				HEADER_SEARCH_PATHS = "";
 				IPHONEOS_DEPLOYMENT_TARGET = 5.1.1;
 				SDKROOT = iphoneos;
@@ -7586,7 +7577,6 @@
 		A07A4F3A178387670073F6A7 /* Release */ = {
 			isa = XCBuildConfiguration;
 			buildSettings = {
-				ARCHS = "$(ARCHS_STANDARD)";
 				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
 				HEADER_SEARCH_PATHS = "";
 				IPHONEOS_DEPLOYMENT_TARGET = 5.1.1;
@@ -7599,7 +7589,6 @@
 		A07A4F9C1783876B0073F6A7 /* Debug */ = {
 			isa = XCBuildConfiguration;
 			buildSettings = {
-				ARCHS = "$(ARCHS_STANDARD)";
 				CLANG_WARN_BOOL_CONVERSION = NO;
 				CLANG_WARN_CONSTANT_CONVERSION = NO;
 				GCC_WARN_64_TO_32_BIT_CONVERSION = NO;
@@ -7617,7 +7606,6 @@
 		A07A4F9D1783876B0073F6A7 /* Release */ = {
 			isa = XCBuildConfiguration;
 			buildSettings = {
-				ARCHS = "$(ARCHS_STANDARD)";
 				CLANG_WARN_BOOL_CONVERSION = NO;
 				CLANG_WARN_CONSTANT_CONVERSION = NO;
 				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
@@ -7637,7 +7625,6 @@
 			isa = XCBuildConfiguration;
 			buildSettings = {
 				ALWAYS_SEARCH_USER_PATHS = YES;
-				ARCHS = "$(ARCHS_STANDARD)";
 				GCC_PREPROCESSOR_DEFINITIONS = (
 					"$(inherited)",
 					CC_TARGET_OS_IPHONE,
@@ -7655,7 +7642,6 @@
 			isa = XCBuildConfiguration;
 			buildSettings = {
 				ALWAYS_SEARCH_USER_PATHS = YES;
-				ARCHS = "$(ARCHS_STANDARD)";
 				GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
 				GCC_PREPROCESSOR_DEFINITIONS = (
 					"$(inherited)",
diff --git a/cocos/2d/CCNode.cpp b/cocos/2d/CCNode.cpp
index 2a52bd1..63794e0 100644
--- a/cocos/2d/CCNode.cpp
+++ b/cocos/2d/CCNode.cpp
@@ -1664,8 +1664,8 @@ const Mat4& Node::getNodeToParentTransform() const
         // If skew is needed, apply skew and then anchor point
         if (needsSkewMatrix)
         {
-            Mat4 skewMatrix(1, (float)tanf(CC_DEGREES_TO_RADIANS(_skewY)), 0, 0,
-                              (float)tanf(CC_DEGREES_TO_RADIANS(_skewX)), 1, 0, 0,
+            Mat4 skewMatrix(1, (float)tanf(CC_DEGREES_TO_RADIANS(_skewX)), 0, 0,
+                              (float)tanf(CC_DEGREES_TO_RADIANS(_skewY)), 1, 0, 0,
                               0,  0,  1, 0,
                               0,  0,  0, 1);
 
@@ -2022,6 +2022,9 @@ GLubyte Node::getDisplayedOpacity() const
 
 void Node::setOpacity(GLubyte opacity)
 {
+    if (opacity==0 && _cascadeOpacityEnabled) setVisible(false); KBR_COCOS_CHANGES //see http://discuss.cocos2d-x.org/t/relation-between-nodes-visible-and-opacity-variables/16416
+    else if (opacity>0) setVisible(true);
+    
     _displayedOpacity = _realOpacity = opacity;
     
     updateCascadeOpacity();
@@ -2047,6 +2050,9 @@ bool Node::isCascadeOpacityEnabled(void) const
 
 void Node::setCascadeOpacityEnabled(bool cascadeOpacityEnabled)
 {
+    if (_displayedOpacity==0 && _cascadeOpacityEnabled) setVisible(false); KBR_COCOS_CHANGES //see http://discuss.cocos2d-x.org/t/relation-between-nodes-visible-and-opacity-variables/16416
+    else if (_displayedOpacity>0) setVisible(true);
+    
     if (_cascadeOpacityEnabled == cascadeOpacityEnabled)
     {
         return;
diff --git a/cocos/audio/android/jni/cddandroidAndroidJavaEngine.h b/cocos/audio/android/jni/cddandroidAndroidJavaEngine.h
index a6bb400..d803542 100644
--- a/cocos/audio/android/jni/cddandroidAndroidJavaEngine.h
+++ b/cocos/audio/android/jni/cddandroidAndroidJavaEngine.h
@@ -31,6 +31,7 @@ THE SOFTWARE.
 namespace CocosDenshion {
     namespace android {
         class AndroidJavaEngine : public SimpleAudioEngine {
+        public:
             ~AndroidJavaEngine();
 
             void preloadBackgroundMusic(const char* pszFilePath);
diff --git a/cocos/audio/proj.wp8/CocosDenshion.vcxproj b/cocos/audio/proj.wp8/CocosDenshion.vcxproj
index 7838be9..bc6cde3 100644
--- a/cocos/audio/proj.wp8/CocosDenshion.vcxproj
+++ b/cocos/audio/proj.wp8/CocosDenshion.vcxproj
@@ -160,10 +160,12 @@
     <ClInclude Include="..\include\Export.h" />
     <ClInclude Include="..\include\SimpleAudioEngine.h" />
     <ClInclude Include="..\wp8\Audio.h" />
+    <ClInclude Include="..\wp8\AudioServiceLocator.h" />
     <ClInclude Include="..\wp8\MediaStreamer.h" />
   </ItemGroup>
   <ItemGroup>
     <ClCompile Include="..\wp8\Audio.cpp" />
+    <ClCompile Include="..\wp8\AudioServiceLocator.cpp" />
     <ClCompile Include="..\wp8\MediaStreamer.cpp" />
     <ClCompile Include="..\wp8\SimpleAudioEngine.cpp" />
   </ItemGroup>
diff --git a/cocos/audio/proj.wp8/CocosDenshion.vcxproj.filters b/cocos/audio/proj.wp8/CocosDenshion.vcxproj.filters
index cbc9b5d..56b8f0f 100644
--- a/cocos/audio/proj.wp8/CocosDenshion.vcxproj.filters
+++ b/cocos/audio/proj.wp8/CocosDenshion.vcxproj.filters
@@ -27,6 +27,9 @@
     <ClInclude Include="..\wp8\MediaStreamer.h">
       <Filter>Source Files</Filter>
     </ClInclude>
+    <ClInclude Include="..\wp8\AudioServiceLocator.h">
+      <Filter>Source Files</Filter>
+    </ClInclude>
   </ItemGroup>
   <ItemGroup>
     <ClCompile Include="..\wp8\Audio.cpp">
@@ -38,5 +41,8 @@
     <ClCompile Include="..\wp8\SimpleAudioEngine.cpp">
       <Filter>Source Files</Filter>
     </ClCompile>
+    <ClCompile Include="..\wp8\AudioServiceLocator.cpp">
+      <Filter>Source Files</Filter>
+    </ClCompile>
   </ItemGroup>
 </Project>
\ No newline at end of file
diff --git a/cocos/audio/wp8/Audio.cpp b/cocos/audio/wp8/Audio.cpp
index feaf711..49140aa 100644
--- a/cocos/audio/wp8/Audio.cpp
+++ b/cocos/audio/wp8/Audio.cpp
@@ -45,7 +45,8 @@ void  _stdcall AudioEngineCallbacks::OnCriticalError(HRESULT Error)
 Audio::Audio() :
     m_backgroundID(0),
 	m_soundEffctVolume(1.0f),
-	m_backgroundMusicVolume(1.0f)
+	m_backgroundMusicVolume(1.0f),
+	m_paused(false)
 {
 }
 
@@ -193,6 +194,8 @@ void Audio::PlayBackgroundMusic(const char* pszFilePath, bool bLoop)
 
     StopBackgroundMusic(true);
     PlaySoundEffect(pszFilePath, bLoop, m_backgroundID, true);
+	m_paused = false;
+
 }
 
 void Audio::StopBackgroundMusic(bool bReleaseData)
@@ -207,6 +210,7 @@ void Audio::StopBackgroundMusic(bool bReleaseData)
         UnloadSoundEffect(m_backgroundID);
         RemoveFromList(m_backgroundID);
     }
+	m_paused = false;
 }
 
 void Audio::PauseBackgroundMusic()
@@ -216,6 +220,7 @@ void Audio::PauseBackgroundMusic()
     }
 
     PauseSoundEffect(m_backgroundID);
+	m_paused = true;
 }
 
 void Audio::ResumeBackgroundMusic()
@@ -225,6 +230,7 @@ void Audio::ResumeBackgroundMusic()
     }
 
     ResumeSoundEffect(m_backgroundID);
+	m_paused = false;
 }
 
 void Audio::RewindBackgroundMusic()
@@ -326,6 +332,7 @@ void Audio::PlaySoundEffect(unsigned int sound)
         return;
     }
 
+	m_soundEffects[sound].m_startedPlayingTime = GetTickCount64();
 	m_soundEffects[sound].m_soundEffectStarted = true;
 }
 
@@ -608,4 +615,17 @@ void Audio::RemoveFromList( unsigned int sound )
     m_soundEffects.erase(sound);
 }
 
+bool Audio::isBackgroundMusicPaused() {
+	return m_paused;
+}
 
+int Audio::getBackgroundMusicCurrentTime() {
+	
+	if (!IsBackgroundMusicPlaying())
+	{
+		return -1;
+	}
+
+	ULONGLONG currentTime = GetTickCount64();
+	return (int)(currentTime - m_soundEffects[m_backgroundID].m_startedPlayingTime);
+}
diff --git a/cocos/audio/wp8/Audio.h b/cocos/audio/wp8/Audio.h
index a00b9a2..173b8ce 100644
--- a/cocos/audio/wp8/Audio.h
+++ b/cocos/audio/wp8/Audio.h
@@ -33,6 +33,7 @@ struct SoundEffectData
 	uint32						m_soundEffectBufferLength;
 	uint32						m_soundEffectSampleRate;
 	bool						m_soundEffectStarted;
+	ULONGLONG 					m_startedPlayingTime;
 };
 
 class Audio;
@@ -61,12 +62,18 @@ struct StreamingVoiceContext : public IXAudio2VoiceCallback
     STDMETHOD_(void, OnVoiceProcessingPassStart)(UINT32){}
     STDMETHOD_(void, OnVoiceProcessingPassEnd)(){}
     STDMETHOD_(void, OnStreamEnd)(){}
-    STDMETHOD_(void, OnBufferStart)(void*)
+	STDMETHOD_(void, OnBufferStart)(void* pContext)
     {
+		if (pContext) {
+			((SoundEffectData*)pContext)->m_soundEffectStarted = true;
+		}
         ResetEvent(hBufferEndEvent);
     }
     STDMETHOD_(void, OnBufferEnd)(void* pContext)
     {
+		if (pContext) {
+			((SoundEffectData*)pContext)->m_soundEffectStarted = false;
+		}
 		//Trigger the event for the music stream.
 		if (pContext == 0) {
             SetEvent(hBufferEndEvent);
@@ -112,6 +119,8 @@ private:
 
     unsigned int Hash(const char* key);
 
+	bool						m_paused;
+
 public:
     Audio();
 
@@ -162,6 +171,10 @@ public:
     void UnloadSoundEffect(const char* pszFilePath);
     void UnloadSoundEffect(unsigned int sound);
 
+	//KBR_COCOS_CHANGES
+	bool isBackgroundMusicPaused();
+	int getBackgroundMusicCurrentTime();
+
 private:
     void RemoveFromList(unsigned int sound);
 };
diff --git a/cocos/audio/wp8/AudioServiceLocator.cpp b/cocos/audio/wp8/AudioServiceLocator.cpp
new file mode 100644
index 0000000..d633dc1
--- /dev/null
+++ b/cocos/audio/wp8/AudioServiceLocator.cpp
@@ -0,0 +1,52 @@
+/*
+* cocos2d-x   http://www.cocos2d-x.org
+*
+* Copyright (c) 2010-2011 - cocos2d-x community
+* 
+* Portions Copyright (c) Microsoft Open Technologies, Inc.
+* All Rights Reserved
+* 
+* Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with the License. 
+* You may obtain a copy of the License at 
+* 
+* http://www.apache.org/licenses/LICENSE-2.0 
+* 
+* Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an 
+* "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. 
+* See the License for the specific language governing permissions and limitations under the License.
+*/
+
+#include "AudioServiceLocator.h"
+
+Audio* m_pPrimaryAudioInstance = nullptr;
+Audio* m_pSecondaryAudioInstance = nullptr;
+
+Audio* AudioServiceLocator::getPrimaryAudio() {
+	if (!m_pPrimaryAudioInstance)
+	{
+		m_pPrimaryAudioInstance = new Audio;
+		m_pPrimaryAudioInstance->Initialize();
+		m_pPrimaryAudioInstance->CreateResources();
+	}
+
+	return m_pPrimaryAudioInstance;
+}
+
+Audio* AudioServiceLocator::getSecondaryAudio() {
+	if (!m_pSecondaryAudioInstance)
+	{
+		m_pSecondaryAudioInstance = new Audio;
+		m_pSecondaryAudioInstance->Initialize();
+		m_pSecondaryAudioInstance->CreateResources();
+	}
+
+	return m_pSecondaryAudioInstance;
+}
+
+void AudioServiceLocator::destroyPrimaryAudio() {
+	m_pPrimaryAudioInstance = nullptr;
+}
+
+void AudioServiceLocator::destroySecondaryAudio() {
+	m_pSecondaryAudioInstance = nullptr;
+}
diff --git a/cocos/audio/wp8/AudioServiceLocator.h b/cocos/audio/wp8/AudioServiceLocator.h
new file mode 100644
index 0000000..0c6bf8e
--- /dev/null
+++ b/cocos/audio/wp8/AudioServiceLocator.h
@@ -0,0 +1,20 @@
+//// THIS CODE AND INFORMATION IS PROVIDED "AS IS" WITHOUT WARRANTY OF
+//// ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING BUT NOT LIMITED TO
+//// THE IMPLIED WARRANTIES OF MERCHANTABILITY AND/OR FITNESS FOR A
+//// PARTICULAR PURPOSE.
+////
+//// Copyright (c) Microsoft Corporation. All rights reserved
+
+// For licensing information relating to this distribution please see Third Party Notices file.
+
+#pragma once
+
+#include "Audio.h"
+
+class AudioServiceLocator {
+public:
+	static Audio* getPrimaryAudio();
+	static Audio* getSecondaryAudio();
+	static void destroyPrimaryAudio();
+	static void destroySecondaryAudio();
+};
\ No newline at end of file
diff --git a/cocos/audio/wp8/SimpleAudioEngine.cpp b/cocos/audio/wp8/SimpleAudioEngine.cpp
index 6a9b173..6206fd7 100644
--- a/cocos/audio/wp8/SimpleAudioEngine.cpp
+++ b/cocos/audio/wp8/SimpleAudioEngine.cpp
@@ -18,6 +18,7 @@
 
 #include "SimpleAudioEngine.h"
 #include "Audio.h"
+#include "AudioServiceLocator.h"
 
 #include <map>
 //#include "CCCommon.h"
@@ -26,7 +27,6 @@ using namespace std;
 namespace CocosDenshion {
 
 Audio* s_audioController = NULL;
-bool s_initialized = false;
 
 SimpleAudioEngine* SimpleAudioEngine::getInstance()
 {
@@ -37,18 +37,7 @@ SimpleAudioEngine* SimpleAudioEngine::getInstance()
 
 static Audio* sharedAudioController()
 {
-    if (! s_audioController || !s_initialized)
-    {
-        if(s_audioController == NULL)
-        {
-            s_audioController = new Audio;
-        }
-        s_audioController->Initialize();
-        s_audioController->CreateResources();
-        s_initialized = true;
-    }
-
-    return s_audioController;
+	return AudioServiceLocator::getPrimaryAudio();
 }
 
 SimpleAudioEngine::SimpleAudioEngine()
@@ -65,7 +54,7 @@ void SimpleAudioEngine::end()
     sharedAudioController()->StopBackgroundMusic(true);
     sharedAudioController()->StopAllSoundEffects(true);
     sharedAudioController()->ReleaseResources();
-    s_initialized = false;
+	AudioServiceLocator::destroyPrimaryAudio();
 }
 
 
diff --git a/cocos/base/CCDirector.cpp b/cocos/base/CCDirector.cpp
index fe22bef..32ad260 100644
--- a/cocos/base/CCDirector.cpp
+++ b/cocos/base/CCDirector.cpp
@@ -944,6 +944,8 @@ void Director::purgeDirector()
 
     if (_runningScene)
     {
+        //Fix bug : onExitTransitionDidStart was not being called (http://discuss.cocos2d-x.org/t/why-cocos2d-x-v3-purgedirector-doesnt-call-onexittransitiondidstart/16447/1)
+        _runningScene->onExitTransitionDidStart(); KBR_COCOS_CHANGES
         _runningScene->onExit();
         _runningScene->cleanup();
         _runningScene->release();
diff --git a/cocos/base/CCRef.cpp b/cocos/base/CCRef.cpp
index 747b08c..0997ba6 100644
--- a/cocos/base/CCRef.cpp
+++ b/cocos/base/CCRef.cpp
@@ -147,20 +147,20 @@ unsigned int Ref::getReferenceCount() const
 
 #if CC_USE_MEM_LEAK_DETECTION
 
-static std::list<Ref*> __refAllocationList;
+static std::list<Ref*>* __refAllocationList;
 
 void Ref::printLeaks()
 {
     // Dump Ref object memory leaks
-    if (__refAllocationList.empty())
+    if (__refAllocationList->empty())
     {
         log("[memory] All Ref objects successfully cleaned up (no leaks detected).\n");
     }
     else
     {
-        log("[memory] WARNING: %d Ref objects still active in memory.\n", (int)__refAllocationList.size());
+        log("[memory] WARNING: %d Ref objects still active in memory.\n", (int)__refAllocationList->size());
 
-        for (const auto& ref : __refAllocationList)
+        for (const auto& ref : *__refAllocationList)
         {
             CC_ASSERT(ref);
             const char* type = typeid(*ref).name();
@@ -171,22 +171,26 @@ void Ref::printLeaks()
 
 static void trackRef(Ref* ref)
 {
+    if (!__refAllocationList) {
+        __refAllocationList = new std::list<Ref*>;
+    }
+    
     CCASSERT(ref, "Invalid parameter, ref should not be null!");
 
     // Create memory allocation record.
-    __refAllocationList.push_back(ref);
+    __refAllocationList->push_back(ref);
 }
 
 static void untrackRef(Ref* ref)
 {
-    auto iter = std::find(__refAllocationList.begin(), __refAllocationList.end(), ref);
-    if (iter == __refAllocationList.end())
+    auto iter = std::find(__refAllocationList->begin(), __refAllocationList->end(), ref);
+    if (iter == __refAllocationList->end())
     {
         log("[memory] CORRUPTION: Attempting to free (%s) with invalid ref tracking record.\n", typeid(*ref).name());
         return;
     }
 
-    __refAllocationList.erase(iter);
+    __refAllocationList->erase(iter);
 }
 
 #endif // #if CC_USE_MEM_LEAK_DETECTION
diff --git a/cocos/base/ccMacros.h b/cocos/base/ccMacros.h
index 165dbab..0d22a60 100644
--- a/cocos/base/ccMacros.h
+++ b/cocos/base/ccMacros.h
@@ -276,4 +276,8 @@ It should work same as apples CFSwapInt32LittleToHost(..)
 #define CC_CALLBACK_2(__selector__,__target__, ...) std::bind(&__selector__,__target__, std::placeholders::_1, std::placeholders::_2, ##__VA_ARGS__)
 #define CC_CALLBACK_3(__selector__,__target__, ...) std::bind(&__selector__,__target__, std::placeholders::_1, std::placeholders::_2, std::placeholders::_3, ##__VA_ARGS__)
 
+// KBR
+
+#define KBR_COCOS_CHANGES
+
 #endif // __BASE_CCMACROS_H__
diff --git a/cocos/base/ccUtils.cpp b/cocos/base/ccUtils.cpp
index 36cafb1..7f37694 100644
--- a/cocos/base/ccUtils.cpp
+++ b/cocos/base/ccUtils.cpp
@@ -177,9 +177,24 @@ double atof(const char* str)
     
     // strip string, only remain 7 numbers after '.'
     char* dot = strchr(buf, '.');
+    char* exp = strchr(buf, 'e');
+    
     if (dot != nullptr && dot - buf + 8 <  MAX_ITOA_BUFFER_SIZE)
     {
-        dot[8] = '\0';
+        KBR_COCOS_CHANGES //fixed problem with exponents (see http://discuss.cocos2d-x.org/t/utils-atof-problem/16625)
+        int dotOffset = 4;
+        
+        if (exp != nullptr && (exp-dot)>dotOffset) {
+            while (*exp != '\0') {
+                dot[dotOffset++] = *exp;
+                exp++;
+            }
+            dot[dotOffset] = '\0';
+        }
+        else {
+            dot[8] = '\0';
+        }
+        
     }
     
     return ::atof(buf);
diff --git a/cocos/editor-support/cocostudio/CCActionManagerEx.cpp b/cocos/editor-support/cocostudio/CCActionManagerEx.cpp
index 76a15e0..59c0133 100644
--- a/cocos/editor-support/cocostudio/CCActionManagerEx.cpp
+++ b/cocos/editor-support/cocostudio/CCActionManagerEx.cpp
@@ -159,7 +159,7 @@ void ActionManagerEx::releaseActions()
     for (iter = _actionDic.begin(); iter != _actionDic.end(); iter++)
     {
         cocos2d::Vector<ActionObject*> objList = iter->second;
-        int listCount = objList.size();
+        int listCount = (int) objList.size();
         for (int i = 0; i < listCount; i++) {
             ActionObject* action = objList.at(i);
             if (action != nullptr) {
diff --git a/cocos/platform/CCGLViewProtocol.cpp b/cocos/platform/CCGLViewProtocol.cpp
index 1e8423a..009d3ce 100644
--- a/cocos/platform/CCGLViewProtocol.cpp
+++ b/cocos/platform/CCGLViewProtocol.cpp
@@ -416,4 +416,12 @@ float GLViewProtocol::getScaleY() const
     return _scaleY;
 }
 
+void GLViewProtocol::lockOpenGLContext() {
+    
+}
+
+void GLViewProtocol::unlockOpenGLContext() {
+    
+}
+
 NS_CC_END
diff --git a/cocos/platform/CCGLViewProtocol.h b/cocos/platform/CCGLViewProtocol.h
index 3b7404e..513d2dc 100644
--- a/cocos/platform/CCGLViewProtocol.h
+++ b/cocos/platform/CCGLViewProtocol.h
@@ -164,6 +164,10 @@ public:
     virtual void handleTouchesMove(int num, intptr_t ids[], float xs[], float ys[]);
     virtual void handleTouchesEnd(int num, intptr_t ids[], float xs[], float ys[]);
     virtual void handleTouchesCancel(int num, intptr_t ids[], float xs[], float ys[]);
+    
+    /** Mac-only methods that were added to enable the correct lock/unlock of openGL contexts **/
+    virtual void lockOpenGLContext();
+    virtual void unlockOpenGLContext();
 
     /**
      * Get the opengl view port rectangle.
@@ -182,6 +186,7 @@ public:
 
     /** returns the current Resolution policy */
     ResolutionPolicy getResolutionPolicy() const { return _resolutionPolicy; }
+    
 
 protected:
     void updateDesignResolutionSize();
diff --git a/cocos/platform/android/java/build.xml b/cocos/platform/android/java/build.xml
index 885e6ee..cd58070 100644
--- a/cocos/platform/android/java/build.xml
+++ b/cocos/platform/android/java/build.xml
@@ -80,4 +80,8 @@
     <!-- version-tag: 1 -->
     <import file="${sdk.dir}/tools/ant/build.xml" />
 
+    <target name="jar" depends="clean,release">
+        <jar destfile="bin/cocos2dx.jar" basedir="bin/classes" />
+    </target>
+
 </project>
diff --git a/cocos/platform/android/java/project.properties b/cocos/platform/android/java/project.properties
index 88ca83f..1d35d2d 100644
--- a/cocos/platform/android/java/project.properties
+++ b/cocos/platform/android/java/project.properties
@@ -12,4 +12,4 @@
 
 android.library=true
 # Project target.
-target=android-10
+target=android-14
diff --git a/cocos/platform/android/java/src/org/cocos2dx/lib/Cocos2dxActivity.java b/cocos/platform/android/java/src/org/cocos2dx/lib/Cocos2dxActivity.java
index 78929fb..96fa913 100644
--- a/cocos/platform/android/java/src/org/cocos2dx/lib/Cocos2dxActivity.java
+++ b/cocos/platform/android/java/src/org/cocos2dx/lib/Cocos2dxActivity.java
@@ -184,12 +184,21 @@ public abstract class Cocos2dxActivity extends Activity implements Cocos2dxHelpe
         if (isAndroidEmulator())
            this.mGLSurfaceView.setEGLConfigChooser(8 , 8, 8, 8, 16, 0);
 
-        this.mGLSurfaceView.setCocos2dxRenderer(new Cocos2dxRenderer());
+        this.mGLSurfaceView.setCocos2dxRenderer(onCreateRenderer());
         this.mGLSurfaceView.setCocos2dxEditText(edittext);
 
         // Set framelayout as the content view
 		setContentView(mFrameLayout);
 	}
+
+	/**
+	 * -- KBR_COCOS_CHANGES --
+	 * This was the best way to have a custom renderer that would allow us 
+	 * to customize the view's appearance at will.
+	 */
+	protected Cocos2dxRenderer onCreateRenderer() {
+		return new Cocos2dxRenderer();
+	}
 	
     public Cocos2dxGLSurfaceView onCreateView() {
     	return new Cocos2dxGLSurfaceView(this);
diff --git a/cocos/platform/android/java/src/org/cocos2dx/lib/Cocos2dxHelper.java b/cocos/platform/android/java/src/org/cocos2dx/lib/Cocos2dxHelper.java
index 3cabec4..17b7be6 100644
--- a/cocos/platform/android/java/src/org/cocos2dx/lib/Cocos2dxHelper.java
+++ b/cocos/platform/android/java/src/org/cocos2dx/lib/Cocos2dxHelper.java
@@ -38,6 +38,7 @@ import android.content.res.AssetManager;
 import android.os.Build;
 import android.preference.PreferenceManager.OnActivityResultListener;
 import android.util.DisplayMetrics;
+import android.util.Log;
 import android.view.Display;
 import android.view.WindowManager;
 
@@ -52,7 +53,7 @@ public class Cocos2dxHelper {
 	// Fields
 	// ===========================================================
 
-	private static Cocos2dxMusic sCocos2dMusic;
+	public static Cocos2dxMusic sCocos2dMusic;
 	private static Cocos2dxSound sCocos2dSound;
 	private static AssetManager sAssetManager;
 	private static Cocos2dxAccelerometer sCocos2dxAccelerometer;
diff --git a/cocos/platform/android/java/src/org/cocos2dx/lib/Cocos2dxMusic.java b/cocos/platform/android/java/src/org/cocos2dx/lib/Cocos2dxMusic.java
index 386a75f..7853a5b 100644
--- a/cocos/platform/android/java/src/org/cocos2dx/lib/Cocos2dxMusic.java
+++ b/cocos/platform/android/java/src/org/cocos2dx/lib/Cocos2dxMusic.java
@@ -37,17 +37,17 @@ public class Cocos2dxMusic {
 	// Constants
 	// ===========================================================
 
-	private static final String TAG = Cocos2dxMusic.class.getSimpleName();
+	protected static final String TAG = Cocos2dxMusic.class.getSimpleName();
 
 	// ===========================================================
 	// Fields
 	// ===========================================================
 
 	private final Context mContext;
-	private MediaPlayer mBackgroundMediaPlayer;
+	protected MediaPlayer mBackgroundMediaPlayer;
 	private float mLeftVolume;
 	private float mRightVolume;
-	private boolean mPaused;// whether music is paused state.
+	protected boolean mPaused;// whether music is paused state.
 	private boolean mManualPaused = false;// whether music is paused manually before the program is switched to the background.
 	private String mCurrentPath;
 
@@ -230,7 +230,7 @@ public class Cocos2dxMusic {
 		}
 	}
 	
-	private void initData() {
+	protected void initData() {
 		this.mLeftVolume = 0.5f;
 		this.mRightVolume = 0.5f;
 		this.mBackgroundMediaPlayer = null;
@@ -272,4 +272,5 @@ public class Cocos2dxMusic {
 	// ===========================================================
 	// Inner and Anonymous Classes
 	// ===========================================================
+	
 }
diff --git a/cocos/platform/desktop/CCGLView.cpp b/cocos/platform/desktop/CCGLView.cpp
index 4c4fbd7..f72ae0d 100644
--- a/cocos/platform/desktop/CCGLView.cpp
+++ b/cocos/platform/desktop/CCGLView.cpp
@@ -803,5 +803,13 @@ bool GLView::initGlew()
 
     return true;
 }
+#if (CC_TARGET_PLATFORM != CC_PLATFORM_MAC)
+void GLView::lockOpenGLContext() {
+    
+}
 
+void GLView::unlockOpenGLContext() {
+    
+}
+#endif
 NS_CC_END // end of namespace cocos2d;
diff --git a/cocos/platform/desktop/CCGLView.h b/cocos/platform/desktop/CCGLView.h
index b49a2f4..d553a39 100644
--- a/cocos/platform/desktop/CCGLView.h
+++ b/cocos/platform/desktop/CCGLView.h
@@ -79,6 +79,10 @@ public:
     
     /** Get retina factor */
     int getRetinaFactor() const { return _retinaFactor; }
+    
+    virtual void lockOpenGLContext() override;
+    
+    virtual void unlockOpenGLContext() override;
 
 protected:
     GLView();
diff --git a/cocos/platform/ios/CCDevice.mm b/cocos/platform/ios/CCDevice.mm
index f04767c..116e51c 100644
--- a/cocos/platform/ios/CCDevice.mm
+++ b/cocos/platform/ios/CCDevice.mm
@@ -215,14 +215,34 @@ static inline void lazyCheckIOS7()
 
 static CGSize _calculateStringSize(NSString *str, id font, CGSize *constrainSize)
 {
+    NSArray *listItems = [str componentsSeparatedByString: @"\n"];
+    CGSize dim = CGSizeZero;
     CGSize textRect = CGSizeZero;
     textRect.width = constrainSize->width > 0 ? constrainSize->width
     : 0x7fffffff;
     textRect.height = constrainSize->height > 0 ? constrainSize->height
     : 0x7fffffff;
     
-    CGSize dim = [str sizeWithFont:font constrainedToSize:textRect];
-
+    for (NSString *s in listItems)
+    {
+        CGSize tmp;
+        
+        // Method only exists on iOS6+.
+        if([s respondsToSelector:@selector(boundingRectWithSize:options:attributes:context:)]){
+            NSDictionary *attributes = @{NSFontAttributeName: font};
+            tmp = [s boundingRectWithSize:textRect options:(NSStringDrawingOptions)(NSStringDrawingUsesLineFragmentOrigin|NSStringDrawingUsesFontLeading) attributes:attributes context:nil].size;
+        } else {
+            tmp = [s sizeWithFont:font constrainedToSize:textRect];
+        }
+        
+        if (tmp.width > dim.width)
+        {
+            dim.width = tmp.width;
+        }
+        
+        dim.height += tmp.height;
+    }
+    
     dim.width = ceilf(dim.width);
     dim.height = ceilf(dim.height);
     
diff --git a/cocos/platform/ios/CCEAGLView.mm b/cocos/platform/ios/CCEAGLView.mm
index fcbddd0..88b9ed4 100644
--- a/cocos/platform/ios/CCEAGLView.mm
+++ b/cocos/platform/ios/CCEAGLView.mm
@@ -900,6 +900,13 @@ Copyright (C) 2008 Apple Inc. All Rights Reserved.
     }
 }
 
+#if CC_TARGET_PLATFORM == CC_PLATFORM_IOS
+
+//Method needed by Vuforia
+- (void)renderFrameQCAR {} KBR_COCOS_CHANGES
+
+#endif
+
 @end
 
 #endif // CC_PLATFORM_IOS
diff --git a/cocos/platform/ios/CCGLView.mm b/cocos/platform/ios/CCGLView.mm
index fa7844a..543c165 100644
--- a/cocos/platform/ios/CCGLView.mm
+++ b/cocos/platform/ios/CCGLView.mm
@@ -87,7 +87,7 @@ GLView::GLView()
 GLView::~GLView()
 {
     CCEAGLView *glview = (CCEAGLView*) _eaglview;
-    [glview release];
+    KBR_COCOS_CHANGES //[glview release];
 }
 
 bool GLView::initWithEAGLView(void *eaglview)
@@ -170,7 +170,8 @@ void GLView::end()
     CCEAGLView *eaglview = (CCEAGLView*) _eaglview;
 
     [eaglview removeFromSuperview];
-    [eaglview release];
+    KBR_COCOS_CHANGES //[eaglview release];
+    release(); KBR_COCOS_CHANGES
 }
 
 
diff --git a/cocos/platform/mac/CCApplication.mm b/cocos/platform/mac/CCApplication.mm
index 2f352d5..3b45443 100644
--- a/cocos/platform/mac/CCApplication.mm
+++ b/cocos/platform/mac/CCApplication.mm
@@ -83,7 +83,20 @@ int Application::run()
     {
         lastTime = getCurrentMillSecond();
         
+        /* Note: In Mac we need to lock the opengl context before drawing
+         * if we are going to have multiple parts of our application
+         *  that use a different context in the same thred
+         */
+        glview->lockOpenGLContext(); KBR_COCOS_CHANGES
+        
         director->mainLoop();
+        
+        /* Note: In Mac we need to unlock the opengl context after drawing
+         * if we are going to have multiple parts of our application
+         *  that use a different context in the same thred
+         */
+        glview->unlockOpenGLContext(); KBR_COCOS_CHANGES
+        
         glview->pollEvents();
 
         curTime = getCurrentMillSecond();
@@ -100,6 +113,8 @@ int Application::run()
     */
     if (glview->isOpenGLReady())
     {
+        glview->lockOpenGLContext(); KBR_COCOS_CHANGES
+        
         director->end();
         director->mainLoop();
     }
diff --git a/cocos/platform/winrt/InputEvent.h b/cocos/platform/winrt/InputEvent.h
index 64f8ed6..e42cf4a 100644
--- a/cocos/platform/winrt/InputEvent.h
+++ b/cocos/platform/winrt/InputEvent.h
@@ -36,6 +36,7 @@ namespace PhoneDirect3DXamlAppComponent
     public delegate void Cocos2dEventDelegate(Cocos2dEvent event);
     public delegate void Cocos2dMessageBoxDelegate(Platform::String^  title, Platform::String^ text);
     public delegate void Cocos2dEditBoxDelegate(Platform::String^ strPlaceHolder, Platform::String^ strText, int maxLength, int inputMode, int inputFlag, Windows::Foundation::EventHandler<Platform::String^>^ receiveHandler);
+	public delegate void KBRWebViewDelegate(Platform::String^ url, int x, int y, int width, int height, bool visible, bool destroy);
 }
 
 NS_CC_BEGIN
diff --git a/cocos/platform/wp8/CCGLView.cpp b/cocos/platform/wp8/CCGLView.cpp
index b2350f9..a6cb8ac 100644
--- a/cocos/platform/wp8/CCGLView.cpp
+++ b/cocos/platform/wp8/CCGLView.cpp
@@ -325,6 +325,15 @@ bool GLView::OpenXamlEditBox(Platform::String^ strPlaceHolder, Platform::String^
 }
 
 
+bool GLView::UpdateWebViewState(Platform::String^ url, int x, int y, int width, int height, bool visible, bool destroy) {
+
+	if (m_webViewDelegate)
+	{
+		m_webViewDelegate->Invoke(url, x, y, width, height,visible,destroy);
+		return true;
+	}
+	return false;
+}
 
 // called by orientation change from WP8 XAML
 void GLView::UpdateOrientation(DisplayOrientations orientation)
diff --git a/cocos/platform/wp8/CCGLView.h b/cocos/platform/wp8/CCGLView.h
index e9d7410..630024b 100644
--- a/cocos/platform/wp8/CCGLView.h
+++ b/cocos/platform/wp8/CCGLView.h
@@ -96,9 +96,12 @@ public:
     void SetXamlEventDelegate(PhoneDirect3DXamlAppComponent::Cocos2dEventDelegate^ delegate) { m_delegate = delegate; };
     void SetXamlMessageBoxDelegate(PhoneDirect3DXamlAppComponent::Cocos2dMessageBoxDelegate^ delegate) { m_messageBoxDelegate = delegate; };
     void SetXamlEditBoxDelegate(PhoneDirect3DXamlAppComponent::Cocos2dEditBoxDelegate^ delegate) { m_editBoxDelegate = delegate; };
+	void SetKBRWebViewDelegate(PhoneDirect3DXamlAppComponent::KBRWebViewDelegate^ delegate) { m_webViewDelegate = delegate; };
+
 
     bool ShowMessageBox(Platform::String^ title, Platform::String^ message);
     bool OpenXamlEditBox(Platform::String^ strPlaceHolder, Platform::String^ strText, int maxLength, int inputMode, int inputFlag, Windows::Foundation::EventHandler<Platform::String^>^ receiveHandler);
+	bool UpdateWebViewState(Platform::String^ url, int x, int y, int width, int height,bool visible, bool destroy);
 
 	int Run();
 	void Render();
@@ -179,6 +182,7 @@ private:
     PhoneDirect3DXamlAppComponent::Cocos2dEventDelegate^ m_delegate;
     PhoneDirect3DXamlAppComponent::Cocos2dMessageBoxDelegate^ m_messageBoxDelegate;
     PhoneDirect3DXamlAppComponent::Cocos2dEditBoxDelegate^ m_editBoxDelegate;
+	PhoneDirect3DXamlAppComponent::KBRWebViewDelegate^ m_webViewDelegate;
 
     std::queue<std::shared_ptr<InputEvent>> mInputEvents;
     std::mutex mMutex;
